from aiogram import F, Router
from aiogram.filters import CommandStart
from aiogram.types import Message, CallbackQuery

import app.keyboards as kb
import app.database.request as rq


router = Router()

@router.message(CommandStart())
async def cmd_start(message: Message):
    await rq.set_user(message.from_user.id)
    await message.answer('–ü—Ä–∏–≤–µ—Ç!üëã'
                        '\n'
                        '\n–Ø ‚Äì —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é –Æ–†–ì–ü–£(–ù–ü–ò)!'
                        '\n'
                        '\n–°–æ –º–Ω–æ–π —Ç—ã –º–æ–∂–µ—à—å –±—ã—Å—Ç—Ä–æ —É–∑–Ω–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–π,'
                        '—á—Ç–æ–±—ã –≤—Å–µ–≥–¥–∞ –±—ã—Ç—å –≤ –∫—É—Ä—Å–µ, –∫—É–¥–∞ –∏ –∫–æ–≥–¥–∞ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –∏–¥—Ç–∏.'
                        '\n'
                        '\nüïí–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã, —è –≤—Å–µ–≥–¥–∞ –Ω–∞ —Å–≤—è–∑–∏. –£–¥–∞—á–∏ –≤ —É—á–µ–±–µ! üìö',
                        reply_markup=kb.main
)

@router.message(F.text == '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ')
async def raspisanie(message: Message):
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –°–≤–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ', reply_markup= await kb.directions())

@router.callback_query(F.data.startswith('direction_'))
async def direction(callback: CallbackQuery):
    direction_id = callback.data.split('_')[1]
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ')
    await callback.message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–¥–µ–ª—é', reply_markup=await kb.weeks(direction_id))

@router.callback_query(F.data.startswith('week_'))
async def week(callback: CallbackQuery):
    week_id = callback.data.split('_')[1]
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –Ω–µ–¥–µ–ª—é')
    await callback.message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏', reply_markup=await kb.days(week_id))

@router.callback_query(F.data.startswith('day_'))
async def day(callback: CallbackQuery):
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –¥–µ–Ω—å')
    subject_category = callback.data.split('_')[1]
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    subjects_data = await rq.get_subjects_by_category(subject_category)
    
    if subjects_data:
        # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–æ–∫—É —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º –¥–ª—è –≤—Å–µ—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤, –≤—ã–≤–æ–¥—è –∏—Ö –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
        schedule_text = "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ:\n"
        for subject in reversed(subjects_data):
            schedule_text += (
                f"–ü—Ä–µ–¥–º–µ—Ç: {subject.name}\n"
                f"–í—Ä–µ–º—è: {subject.time}\n"
                f"–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å: {subject.teacher_name}\n"
                f"–ê—É–¥–∏—Ç–æ—Ä–∏—è: {subject.office}{subject.coprus}\n\n"
            )
        
        # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –∑–∞–º–µ–Ω—è—è —Å—Ç–∞—Ä–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–æ–≤—ã–º
        await callback.message.edit_text(schedule_text)
    else:
        # –ï—Å–ª–∏ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –Ω–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ–º
        await callback.message.edit_text("–ù–µ—Ç –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –¥–Ω—è.")



   
   
    


